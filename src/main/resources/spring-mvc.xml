<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 支持上传文件 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--用来解析request请求的默认编码格式-->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 以字节为单位的最大上传文件的大小  20M=2*1024*1024=2097152 当设为-1时表示无限制   默认是-1-->
        <property name="maxUploadSize" value="41943040"/>
        <!--maxInMemorySize：设置在文件上传时允许写到内存中的最大值  以字节为单位计算  默认是10240-->
        <!-- uploadTempDir：设置上传文件时的临时目录  默认是Servlet容器的临时目录 -->
    </bean>

    <!-- 配置自动扫描的包 -->
    <context:component-scan base-package="com.beini"/>
    <!-- 开启注解 -->
    <mvc:annotation-driven/>
    <!--ViewResolver 视图解析器-->
    <!--用于支持Servlet、JSP视图解析-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--异步超时时间-->
    <mvc:annotation-driven>
        <!--  可不设置，使用默认的超时时间 -->
        <mvc:async-support default-timeout="3000"/>
    </mvc:annotation-driven>

    <!-- 引入spring-data-redis.xml -->
    <import resource="spring-data-redis.xml"/>

    <!--
        在mvc:interceptors标签下声明interceptor主要有两种方式：
   （1）直接定义一个Interceptor实现类的bean对象。使用这种方式声明的Interceptor拦截器将会对所有的请求进行拦截。
   （2）使用mvc:interceptor标签进行声明。使用这种方式进行声明的Interceptor可以通过mvc:mapping子标签来定义需要进行拦截的请求路径。
   -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/><!--匹配的是url路径， 如果不配置或/**,将拦截所有的Controller-->
            <mvc:exclude-mapping path="/login"/><!-- 不需要拦截的地址 -->
            <bean class="com.beini.interceptor.SessionInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>
